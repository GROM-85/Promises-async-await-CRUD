{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","src/js/todo/todoApi.js","src/js/todo/renderToDo.js","src/js/todo/todo.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n"," export class dataBaseTodo{\n    #BASE_URL;\n\n    constructor(){\n        this.#BASE_URL = \"http://localhost:8081/employees\";\n    }\n\n    async getData(){\n        const response = await fetch(this.#BASE_URL);\n        if(!response.ok){\n            throw new Error(error);\n        }\n        return await response.json();\n    }\n\n    async getDataById(id){\n        const response = await fetch(this.#BASE_URL + `/${id}`);\n        if(!response.ok){\n            throw new Error(error);\n        }\n        return await response.json();\n    }\n\n    async postData(data){\n        const options = {\n            method:\"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify(data)\n        }\n        const response = await fetch(this.#BASE_URL,options);\n        if(!response.ok){\n            throw new Error(error);\n        }\n        return await response.json();\n    }\n\n    async updateData({id,data}){\n        const options = {\n            method:\"PATCH\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify(data)\n        }\n\n        const response = await fetch(this.#BASE_URL + `/${id}`,options);\n        if(!response.ok){\n            throw new Error(error);\n        }\n        return await response.json();\n    }\n\n    async deleteData(id){\n        const options = {\n            method:\"DELETE\"\n        }\n        const response = await fetch(this.#BASE_URL + `/${id}`,options);\n        if(!response.ok){\n            throw new Error(error);\n        }\n        return await response.json();\n    }\n}","export const createNewTaskElement = ({ title,id }) => {\n    return ` <li id=\"${id}\">\n          <input type=\"checkbox\" />\n          <label>${title}</label>\n          <input class=\"edit-input\" type=\"hidden\" value=\"${title}\"/>\n          <button class=\"edit\" data-action=\"edit\">Edit</button>\n          <button class=\"delete\" data-action=\"delete\">Delete</button>\n        </li>`;\n  };","import {dataBaseTodo} from \"./todoApi\";\nimport { createNewTaskElement } from \"./renderToDo\";\n\nconst taskInput = document.getElementById(\"new-task\");\nconst addButton = document.querySelector(\"button.add\");\nconst tasksHolder = document.querySelector(\"#tasks-list\");\n\nlet uid = () =>{\n    return Date.now().toString(16) + Math.random().toString(36).substring(2);\n} \nconst todoDB = new dataBaseTodo();\n\n//add new task\nconst addTask = async () =>{\n    if(taskInput.value === \"\"){\n        taskInput.style.borderColor = \"red\";\n        return;\n    }\n\n    const newTodo = {\n        id: uid(),\n        title: taskInput.value.trim(),\n    }\n  \n    try{\n         // add to DB\n        const response = await todoDB.postData(newTodo);\n         // add to page\n        const markup = createNewTaskElement(newTodo);\n        tasksHolder.insertAdjacentHTML(\"afterbegin\",markup);\n    }catch(error){\n        console.log(error.message)\n    }\n    finally{\n        taskInput.value = \"\";\n        taskInput.style.borderColor = \"#ddd\";\n    }\n  \n}\n\n// edit task\n\nconst editTask = async ({target}) =>{\n    const {id } = target.parentNode; // li.id\n    const li = target.parentNode;\n    if(!target.matches(\".edit\")) return;\n\n    let editInput = li.querySelector(\".edit-input\");\n    let label = li.querySelector(\"label\");\n\n    if(editInput.type === \"text\"){\n        try {\n            let data = { title: editInput.value.trim() };\n            const response = await todoDB.updateData({id,data});\n            console.log(response);\n            label.textContent = editInput.value.trim();\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    editInput.type = (editInput.type === \"hidden\" && \"text\")||\"hidden\";\n    target.textContent = editInput.type === \"hidden\" ? \"Edit\": \"Save\"; \n    \n}\n\n// delete task\n\nconst deleteTask = async (e) => {\n    const {id} = e.target.parentNode;\n    \n    if(!e.target.matches(\".delete\")) return;\n\n    try {\n        const response = await todoDB.deleteData(id);\n        e.target.parentNode.remove();\n\n    } catch (error) {\n        console.log(error)\n    }\n}\nwindow.addEventListener(\"load\", async (e) =>{\n    try{\n        const response = await todoDB.getData();\n        console.log(response);\n        const markup = response.map(createNewTaskElement).join(\"\");\n        tasksHolder.insertAdjacentHTML(\"beforeend\",markup);\n    }catch(error){\n        console.log(error);\n    }\n})\n\n\naddButton.addEventListener(\"click\",addTask);\ntasksHolder.addEventListener(\"click\",editTask);\ntasksHolder.addEventListener(\"click\",deleteTask);\n\ntaskInput.addEventListener(\"keydown\",(e) =>{\n    if(e.key === \"Enter\") addTask();\n})"],"names":["$63a2a9cb56255ced$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$91f06d233fb295cb$export$2e2bcd8739ae039","descriptor","call","value","$cfafd7bd727718cb$export$2e2bcd8739ae039","$3b30310a11d769ec$export$2e2bcd8739ae039","obj","privateCollection","$a33675d45e16a910$export$2e2bcd8739ae039","set","$613067712a285d8d$export$2e2bcd8739ae039","writable","$97039f73d3457507$export$2e2bcd8739ae039","$10930a31de0abb7a$var$_BASE_URL","WeakMap","$f8af7d0429c65185$export$a3a68ae7bd5f7103","title","id","$4b94e1a17aaaa720$var$taskInput","document","getElementById","$4b94e1a17aaaa720$var$addButton","querySelector","$4b94e1a17aaaa720$var$tasksHolder","$4b94e1a17aaaa720$var$todoDB","async","response","fetch","this","ok","Error","error","json","data","options","method","headers","body","JSON","stringify","constructor","$4b94e1a17aaaa720$var$addTask","style","borderColor","newTodo","Date","now","toString","Math","random","substring","trim","postData","markup","insertAdjacentHTML","console","log","message","window","addEventListener","e","getData","map","join","target","parentNode","li","matches","editInput","label","type","updateData","textContent","deleteData","remove","key"],"version":3,"file":"todo.6adb4185.js.map"}