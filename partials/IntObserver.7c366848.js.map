{"mappings":"AAAA,MAAMA,EAAQC,SAASC,iBAAiB,SAClCC,EAAiBF,SAASG,cAAc,mBAExCC,EAAW,IAAIC,sBAAqBC,IACtCC,QAAQC,IAAIF,GACZA,EAAQG,SAAQC,IACZA,EAAMC,OAAOC,UAAUC,OAAO,OAAOH,EAAMI,eAAc,GAE7D,GAEF,CACEC,UAAU,KAKdhB,EAAMU,SAAQO,IACVZ,EAASa,QAAQD,EAAA,IAMI,IAAIX,sBAAqBC,IAC7BA,EAAQ,GACZQ,gBAQjB,WACI,MAAMI,EAAW,GACjB,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACvB,MAAMH,EAAOhB,SAASoB,cAAc,OACpCJ,EAAKJ,UAAUS,IAAI,QACnBL,EAAKM,YAAc,WACnBlB,EAASa,QAAQD,GACjBE,EAASK,KAAKP,EAClB,CACAd,EAAesB,UAAUN,EAC7B,CAjBIO,EAAA,GACF,CACEV,UAAU,KAGGE,QAAQjB,SAASG,cAAc","sources":["src/js/IntersectionObjserver/IntObserver.js"],"sourcesContent":["const cards = document.querySelectorAll(\".card\")\nconst cardsContainer = document.querySelector(\".card-container\");\n// entries is an array of our targets we want to observe\nconst observer = new IntersectionObserver(entries => {\n    console.log(entries);\n    entries.forEach(entry => {\n        entry.target.classList.toggle(\"show\",entry.isIntersecting);\n        // if(entry.isIntersecting) observer.unobserve(entry.target); // in case elem is loaded so we stoop observe it \n    })\n\n},{\n    threshold:0.5,\n    // rootMargin:\"-100px\",\n})\n// threshold CAN NOT BE used with rootMargin due to some unpredictable behaviour!!!\n\ncards.forEach(card => {\n    observer.observe(card);\n})\n\n\n//INFINIT SCROLL\n\nconst lastCardObserver = new IntersectionObserver(entries =>{\n    const lastCard = entries[0];\n    if(!lastCard.isIntersecting) return;\n    loadNewCards();\n},{\n    threshold:0.5\n})\n\nlastCardObserver.observe(document.querySelector(\".card:last-child\"));\n\nfunction loadNewCards(){\n    const cardsArr = []\n    for(let i = 0; i < 20; i++){\n        const card = document.createElement(\"div\");\n        card.classList.add(\"card\");\n        card.textContent = \"New card\";\n        observer.observe(card);\n        cardsArr.push(card);\n    }\n    cardsContainer.append(...cardsArr);\n}"],"names":["$6609f9924a90581b$var$cards","document","querySelectorAll","$6609f9924a90581b$var$cardsContainer","querySelector","$6609f9924a90581b$var$observer","IntersectionObserver","entries","console","log","forEach","entry","target","classList","toggle","isIntersecting","threshold","card","observe","cardsArr","i","createElement","add","textContent","push","append","$6609f9924a90581b$var$loadNewCards"],"version":3,"file":"IntObserver.7c366848.js.map"}