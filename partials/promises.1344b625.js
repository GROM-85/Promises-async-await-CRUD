const frameworks=["React","Vue","Angular"],getRandomDelay=()=>Math.ceil(1e3*Math.random()),makePromise=e=>{let o=Math.ceil(1e3*Math.random());return new Promise(((r,s)=>{setTimeout((()=>{o<500?r({framework:e,delay:o}):s({framework:e,delay:o,error:"Promise error"})}),o)}))},promises=frameworks.map((e=>makePromise(e)));function onSuccess({framework:e,delay:o}){console.log(`🥝${e} won with ${o} ms`)}function onReject({framework:e,delay:o,error:r}){console.log(`❌${r}! ${e} rejected in ${o} ms`)}Promise.race(promises).then(onSuccess).catch(onReject),Promise.all(promises).then((e=>{e.forEach(onSuccess)})).catch(onReject),Promise.allSettled(promises).then((e=>{console.log(e),e.forEach((({status:e,reason:o,value:r})=>{"fulfilled"===e?onSuccess(r):onReject(o)}))})),Promise.any(promises).then((e=>{console.log(e),onSuccess(e)})).catch((({errors:e})=>e.forEach(onReject)));const BASE_URL="https://api.github.com/users/";function getUser(e){let o=new XMLHttpRequest;return new Promise(((r,s)=>{o.open("GET",BASE_URL+e),o.send(),o.addEventListener("load",(()=>{r(o)})),o.addEventListener("error",(()=>{s(o)}))}))}getUser("GROM-85").then((e=>{if(200!==e.status)throw new Error("OOps something wrong");return JSON.parse(e.response)})).then(console.log).catch((e=>console.log(e)));
//# sourceMappingURL=promises.1344b625.js.map
