!function(){function t(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)}function e(t,e){return e.get?e.get.call(t):e.value}function n(n,a){return e(n,t(n,a,"get"))}function a(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function o(t,e,n){a(t,e),e.set(t,n)}function r(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}}function i(e,n,a){return r(e,t(e,n,"set"),a),a}var s=new WeakMap;const c=({title:t,id:e})=>` <li id="${e}">\n          <input type="checkbox" />\n          <label>${t}</label>\n          <input class="edit-input" type="hidden" value="${t}"/>\n          <button class="edit" data-action="edit">Edit</button>\n          <button class="delete" data-action="delete">Delete</button>\n        </li>`,d=document.getElementById("new-task"),l=document.querySelector("button.add"),u=document.querySelector("#tasks-list");const h=new class{async getData(){const t=await fetch(n(this,s));if(!t.ok)throw new Error(error);return await t.json()}async getDataById(t){const e=await fetch(n(this,s)+`/${t}`);if(!e.ok)throw new Error(error);return await e.json()}async postData(t){const e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)},a=await fetch(n(this,s),e);if(!a.ok)throw new Error(error);return await a.json()}async updateData({id:t,data:e}){const a={method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)},o=await fetch(n(this,s)+`/${t}`,a);if(!o.ok)throw new Error(error);return await o.json()}async deleteData(t){const e=await fetch(n(this,s)+`/${t}`,{method:"DELETE"});if(!e.ok)throw new Error(error);return await e.json()}constructor(){o(this,s,{writable:!0,value:void 0}),i(this,s,"http://localhost:8081/employees")}},y=async()=>{if(""===d.value)return void(d.style.borderColor="red");const t={id:Date.now().toString(16)+Math.random().toString(36).substring(2),title:d.value.trim()};try{await h.postData(t);const e=c(t);u.insertAdjacentHTML("afterbegin",e)}catch(t){console.log(t.message)}finally{d.value="",d.style.borderColor="#ddd"}};window.addEventListener("load",(async t=>{try{const t=await h.getData();console.log(t);const e=t.map(c).join("");u.insertAdjacentHTML("beforeend",e)}catch(t){console.log(t)}})),l.addEventListener("click",y),u.addEventListener("click",(async({target:t})=>{const{id:e}=t.parentNode,n=t.parentNode;if(!t.matches(".edit"))return;let a=n.querySelector(".edit-input"),o=n.querySelector("label");if("text"===a.type)try{let t={title:a.value.trim()};const n=await h.updateData({id:e,data:t});console.log(n),o.textContent=a.value.trim()}catch(t){console.log(t)}a.type="hidden"===a.type?"text":"hidden",t.textContent="hidden"===a.type?"Edit":"Save"})),u.addEventListener("click",(async t=>{const{id:e}=t.target.parentNode;if(t.target.matches(".delete"))try{await h.deleteData(e);t.target.parentNode.remove()}catch(t){console.log(t)}})),d.addEventListener("keydown",(t=>{"Enter"===t.key&&y()}))}();
//# sourceMappingURL=todo.f99eb745.js.map
